name: Release Workflow

on:
  repository_dispatch:
    types: [release]

env:
  RELEASE_TYPE: ${{ github.event.client_payload.release_type }}
  WORKFLOW_VERSION: ${{ github.event.client_payload.workflow_version }}
  SWIFT_CHANGELOG: ${{ github.event.client_payload.swift_changelog }}
  KOTLIN_CHANGELOG: ${{ github.event.client_payload.kotlin_changelog }}
  PUBLISH_SWIFT: ${{ github.event.client_payload.publish_swift }}
  PUBLISH_KOTLIN: ${{ github.event.client_payload.publish_kotlin }}
  PREFIX_FOR_TEST: 'test/' # Will be removed once live

jobs:
  bump-master:
    runs-on: macOS-latest

    steps:
    - name: Calculate Release Branch
      run: |
        MAJOR=$(cut -d'.' -f1 <<<'${{ env.WORKFLOW_VERSION }}')
        MINOR=$(cut -d'.' -f2 <<<'${{ env.WORKFLOW_VERSION }}')
        echo "::set-env name=RELEASE_BRANCH::${{ env.PREFIX_FOR_TEST }}release-v$MAJOR.$MINOR.x"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout Master
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PREFIX_FOR_TEST }}master
        path: master

    - name: Setup Release Branch (major, minor)
      if: env.RELEASE_TYPE == 'major' || env.RELEASE_TYPE == 'minor'
      run: |
        cp -R master release
        cd release
        git checkout -b ${{ env.RELEASE_BRANCH }}

    - name: Setup Release Branch (patch)
      if: env.RELEASE_TYPE == 'patch'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.RELEASE_BRANCH }}
        path: release

    - name: Update Changelog
      run: |
        cd master
        go run ../.buildscript/release
        cd ../release
        go run ../.buildscript/release

    - name: Update Master Version (major, minor)
      if: env.RELEASE_TYPE == 'major' || env.RELEASE_TYPE == 'minor'
      run: |
        cd master
        sed -i '' -e 's/VERSION_NAME=\(.*\)-SNAPSHOT/VERSION_NAME=${{ env.WORKFLOW_VERSION }}-SNAPSHOT/g' kotlin/gradle.properties
        ls Workflow*.podspec | xargs sed -i '' -e "s/ s.version\( *=\).*/ s.version\1 '${{ env.WORKFLOW_VERSION }}'/"

    - name: Push changes to master
      env:
        GIT_USERNAME: ${{ github.actor }}
        GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd master
        git add -A . && git commit -m "Releasing ${{ env.WORKFLOW_VERSION }}" && git push -f

    - name: Push Release Branch
      run: |
        cd release
        sed -i '' -e 's/VERSION_NAME=\(.*\)-SNAPSHOT/VERSION_NAME=${{ env.WORKFLOW_VERSION }}/g' kotlin/gradle.properties
        sed -i '' -e 's/VERSION_NAME=\(.*\)/VERSION_NAME=${{ env.WORKFLOW_VERSION }}/g' kotlin/gradle.properties
        ls Workflow*.podspec | xargs sed -i '' -e "s/ s.version\( *=\).*/ s.version\1 '${{ env.WORKFLOW_VERSION }}'/"
        git add -A .; git commit -m "Releasing ${{ env.WORKFLOW_VERSION }}"
        git tag ${{ env.PREFIX_FOR_TEST }}v${{ env.WORKFLOW_VERSION }}
        git push origin ${{ env.RELEASE_BRANCH }} test-v${{ env.WORKFLOW_VERSION }}

    - name: Upload Kotlin Artifacts
      if: env.PUBLISH_KOTLIN == 'true'
      run: |
        echo "TODO: Publish Kotlin Artifacts"

    - name: Push to Cocoapods
      if: env.PUBLISH_SWIFT == 'true'
      run: |
        echo "TODO: Push to Cocoapods"

    - name: Publish Docs
      run: |
        echo "TODO: Publish Docs"

    - name: Create Github Release
      run: |
        echo "TODO: Create Github Release"


